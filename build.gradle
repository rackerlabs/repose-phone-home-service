group = 'org.openrepose.phonehome'
version = '1.0'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.0.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("com.netflix.nebula:gradle-ospackage-plugin:2.2.6")
    }
}

apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'groovy'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'spring-boot'
apply plugin: 'nebula.os-package'

testSets {
    integrationTest
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
build.dependsOn buildDeb

repositories {
    mavenCentral()
    maven {
        url 'http://repo.spring.io/milestone'
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

def springBootVersion = "1.3.0.RELEASE"
def spockVersion = "1.0-groovy-2.4"

dependencies {
    compile("org.scala-lang:scala-library:2.11.7")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion")
    testCompile("junit:junit:4.12")
    testCompile("org.scalatest:scalatest_2.11:2.2.5")
    testCompile("org.mockito:mockito-all:1.10.19")
    integrationTestCompile("org.codehaus.groovy:groovy:2.4.4")
    integrationTestCompile("junit:junit:4.12")
    integrationTestCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    integrationTestCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.0")
    integrationTestCompile("org.apache.httpcomponents:httpclient:4.5.1")
    integrationTestCompile("org.spockframework:spock-core:$spockVersion")
    integrationTestCompile("org.spockframework:spock-spring:$spockVersion")
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.allSource.srcDirs.flatten()
        scopes.TEST.plus += [configurations.integrationTestCompile]
    }
}

ospackage {
    packageName = "repose-phone-home"
    version = project.version
    release = 1
    arch = "all"
    os = LINUX

    user = 'phone-home'
    permissionGroup = 'phone-home'

    preInstall file('src/files/preInstall.sh')
    postInstall file('src/files/postInstall.sh')
    postUninstall file('src/files/postUninstall.sh')

    //Grab the bits out of the boot repackage excluding the extra versioned name
    from(jar.outputs.files) {
        into '/opt/repose-phone-home'
    }

    from("src/files/config") {
        fileType CONFIG | NOREPLACE
        into "/etc/repose-phone-home"
    }
    from("src/files/inits") {
        into "bin"
        fileMode 0550
    }
}

buildDeb {
    requires('mongodb-server')
    requires('openjdk-7-jre-headless')
    //Link in our init script
    link('/etc/init.d/repose-phone-home', '/opt/repose-phone-home/bin/repose-phone-home-debian.init')

}
